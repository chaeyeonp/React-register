{"ast":null,"code":"var _jsxFileName = \"/Users/chaeyeon/Library/Mobile Documents/com~apple~CloudDocs/00.Github/SNS/ch1/front/pages/_document.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Document, { Main, NextScript } from 'next/document';\nimport Helmet from 'react-helmet';\ns;\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const initialProps = await Document.getInitialProps(ctx);\n    return _objectSpread(_objectSpread({}, initialProps), {}, {\n      helmet: Helmet.renderStatic()\n    });\n  }\n\n  render() {\n    const _this$props$helmet = this.props.helmet,\n          {\n      htmlAttributes,\n      bodyAttributes\n    } = _this$props$helmet,\n          helmet = _objectWithoutProperties(_this$props$helmet, [\"htmlAttributes\", \"bodyAttributes\"]);\n\n    const htmlAttrs = htmlAttributes.toComponent();\n    const bodyAttrs = bodyAttributes.toComponent();\n    return __jsx(\"html\", _extends({}, htmlAttrs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }), __jsx(\"head\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, Object.values(helmet).map(el => el.toComponent())), __jsx(\"body\", _extends({}, bodyAttrs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }), __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default MyDocument;","map":{"version":3,"sources":["/Users/chaeyeon/Library/Mobile Documents/com~apple~CloudDocs/00.Github/SNS/ch1/front/pages/_document.js"],"names":["React","Document","Main","NextScript","Helmet","s","MyDocument","getInitialProps","ctx","initialProps","helmet","renderStatic","render","props","htmlAttributes","bodyAttributes","htmlAttrs","toComponent","bodyAttrs","Object","values","map","el"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,UAAzB,QAA2C,eAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEAC,CAAC;;AAED,MAAMC,UAAN,SAAyBL,QAAzB,CAAkC;AAC9B,eAAaM,eAAb,CAA6BC,GAA7B,EAAkC;AAC9B,UAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACM,eAAT,CAAyBC,GAAzB,CAA3B;AACA,2CAAYC,YAAZ;AAA0BC,MAAAA,MAAM,EAAEN,MAAM,CAACO,YAAP;AAAlC;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,+BAAsD,KAAKC,KAAL,CAAWH,MAAjE;AAAA,UAAM;AAAEI,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,KAAN;AAAA,UAA2CL,MAA3C;;AACA,UAAMM,SAAS,GAAGF,cAAc,CAACG,WAAf,EAAlB;AACA,UAAMC,SAAS,GAAGH,cAAc,CAACE,WAAf,EAAlB;AAEA,WACI,2BAAUD,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKG,MAAM,CAACC,MAAP,CAAcV,MAAd,EAAsBW,GAAtB,CAA0BC,EAAE,IAAIA,EAAE,CAACL,WAAH,EAAhC,CADL,CADA,EAIA,2BAAUC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAJA,CADJ;AAWH;;AAvB6B;;AA4BlC,eAAeZ,UAAf","sourcesContent":["import React from 'react';\nimport Document , {Main, NextScript } from 'next/document';\nimport Helmet from 'react-helmet';\n\ns\n\nclass MyDocument extends Document {\n    static async getInitialProps(ctx) {\n        const initialProps = await Document.getInitialProps(ctx)\n        return { ...initialProps, helmet: Helmet.renderStatic() }\n    }\n\n    render() {\n\n        const { htmlAttributes, bodyAttributes, ...helmet } = this.props.helmet;\n        const htmlAttrs = htmlAttributes.toComponent();\n        const bodyAttrs = bodyAttributes.toComponent();\n\n        return(\n            <html {...htmlAttrs}>\n            <head>\n                {Object.values(helmet).map(el => el.toComponent())}\n            </head>\n            <body {...bodyAttrs}>\n            <Main />\n            <NextScript />\n            </body>\n            </html>\n        );\n    }\n}\n\n\n\nexport default MyDocument;"]},"metadata":{},"sourceType":"module"}